///
/// JPTSessionResult.hpp
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2025 Marc Rousavy @ Margelo
///

#pragma once

#include <fbjni/fbjni.h>
#include "PTSessionResult.hpp"

#include "JPTError.hpp"
#include "JPTSessionStatus.hpp"
#include "PTError.hpp"
#include "PTSessionStatus.hpp"
#include <optional>

namespace margelo::nitro::espprovtoolkit {

  using namespace facebook;

  /**
   * The C++ JNI bridge between the C++ struct "PTSessionResult" and the the Kotlin data class "PTSessionResult".
   */
  struct JPTSessionResult final: public jni::JavaClass<JPTSessionResult> {
  public:
    static auto constexpr kJavaDescriptor = "Lcom/margelo/nitro/espprovtoolkit/PTSessionResult;";

  public:
    /**
     * Convert this Java/Kotlin-based struct to the C++ struct PTSessionResult by copying all values to C++.
     */
    [[maybe_unused]]
    [[nodiscard]]
    PTSessionResult toCpp() const {
      static const auto clazz = javaClassStatic();
      static const auto fieldSuccess = clazz->getField<jboolean>("success");
      jboolean success = this->getFieldValue(fieldSuccess);
      static const auto fieldStatus = clazz->getField<JPTSessionStatus>("status");
      jni::local_ref<JPTSessionStatus> status = this->getFieldValue(fieldStatus);
      static const auto fieldError = clazz->getField<JPTError>("error");
      jni::local_ref<JPTError> error = this->getFieldValue(fieldError);
      return PTSessionResult(
        static_cast<bool>(success),
        status != nullptr ? std::make_optional(status->toCpp()) : std::nullopt,
        error != nullptr ? std::make_optional(error->toCpp()) : std::nullopt
      );
    }

  public:
    /**
     * Create a Java/Kotlin-based struct by copying all values from the given C++ struct to Java.
     */
    [[maybe_unused]]
    static jni::local_ref<JPTSessionResult::javaobject> fromCpp(const PTSessionResult& value) {
      return newInstance(
        value.success,
        value.status.has_value() ? JPTSessionStatus::fromCpp(value.status.value()) : nullptr,
        value.error.has_value() ? JPTError::fromCpp(value.error.value()) : nullptr
      );
    }
  };

} // namespace margelo::nitro::espprovtoolkit
